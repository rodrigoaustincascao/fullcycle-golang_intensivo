version: '3'

networks:
  golangnet:
    driver: bridge

volumes:
    mysql-volume:

services:
  go-app:
    image: mcr.microsoft.com/devcontainers/go:1-1.21-bullseye
    tty: true
    volumes:
      - ../:/go/src
    ports:
      - "8080:8080"
    networks:
      - golangnet
    # environment:
  
  mysql:
    image: mysql:5.7
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orders
      MYSQL_PASSWORD: root
    volumes:
      - mysql-volume:/var/lib/mysql
      - ./mysql/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - golangnet

  rabbitmq:
    image: rabbitmq:3.8.16-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
      - "15692:15692"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_VHOST=/
    networks:
      - golangnet

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - golangnet

  grafanaservice:
    image: grafana/grafana
    container_name: grafana
    hostname: grafana
    ports:
      - "3000:3000"
    networks:
      - golangnet